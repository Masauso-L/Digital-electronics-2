
gpio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000354  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e80  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000733  00000000  00000000  00001284  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000047a  00000000  00000000  000019b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001e34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042a  00000000  00000000  00001edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031a  00000000  00000000  00002306  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002620  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 81 00 	call	0x102	; 0x102 <main>
  78:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <GPIO_config_output>:
}

/*--------------------------------------------------------------------*/
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name | (1<<pin_num);
  80:	fc 01       	movw	r30, r24
  82:	40 81       	ld	r20, Z
  84:	21 e0       	ldi	r18, 0x01	; 1
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <GPIO_config_output+0xe>
  8a:	22 0f       	add	r18, r18
  8c:	33 1f       	adc	r19, r19
  8e:	6a 95       	dec	r22
  90:	e2 f7       	brpl	.-8      	; 0x8a <GPIO_config_output+0xa>
  92:	24 2b       	or	r18, r20
  94:	20 83       	st	Z, r18
  96:	08 95       	ret

00000098 <GPIO_config_input_pullup>:
  98:	fc 01       	movw	r30, r24
  9a:	80 81       	ld	r24, Z
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <GPIO_config_input_pullup+0xe>
  a2:	22 0f       	add	r18, r18
  a4:	33 1f       	adc	r19, r19
  a6:	6a 95       	dec	r22
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <GPIO_config_input_pullup+0xa>
  aa:	92 2f       	mov	r25, r18
  ac:	90 95       	com	r25
  ae:	89 23       	and	r24, r25
  b0:	80 83       	st	Z, r24
  b2:	80 81       	ld	r24, Z
  b4:	81 81       	ldd	r24, Z+1	; 0x01
  b6:	28 2b       	or	r18, r24
  b8:	21 83       	std	Z+1, r18	; 0x01
  ba:	08 95       	ret

000000bc <GPIO_write_low>:
  bc:	fc 01       	movw	r30, r24
  be:	90 81       	ld	r25, Z
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <GPIO_write_low+0xe>
  c6:	22 0f       	add	r18, r18
  c8:	33 1f       	adc	r19, r19
  ca:	6a 95       	dec	r22
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <GPIO_write_low+0xa>
  ce:	20 95       	com	r18
  d0:	29 23       	and	r18, r25
  d2:	20 83       	st	Z, r18
  d4:	08 95       	ret

000000d6 <GPIO_toggle>:
}

/*--------------------------------------------------------------------*/
void GPIO_toggle(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name ^ (1<<pin_num);
  d6:	fc 01       	movw	r30, r24
  d8:	40 81       	ld	r20, Z
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <GPIO_toggle+0xe>
  e0:	22 0f       	add	r18, r18
  e2:	33 1f       	adc	r19, r19
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <GPIO_toggle+0xa>
  e8:	24 27       	eor	r18, r20
  ea:	20 83       	st	Z, r18
  ec:	08 95       	ret

000000ee <GPIO_read>:
}

/*--------------------------------------------------------------------*/
uint8_t GPIO_read(volatile uint8_t *reg_name, uint8_t pin_num)
{
	if(bit_is_clear(*reg_name, pin_num))
  ee:	fc 01       	movw	r30, r24
  f0:	80 81       	ld	r24, Z
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <GPIO_read+0xc>
  f6:	95 95       	asr	r25
  f8:	87 95       	ror	r24
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <GPIO_read+0x8>
	}
	else 
	{
		return 1;
	}
  fe:	81 70       	andi	r24, 0x01	; 1
 100:	08 95       	ret

00000102 <main>:
 */

int main(void)
{
    /* GREEN LED */
    GPIO_config_output(&DDRB, LED_GREEN_1);  //output configuration
 102:	61 e0       	ldi	r22, 0x01	; 1
 104:	84 e2       	ldi	r24, 0x24	; 36
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
    GPIO_write_low(&PORTB, LED_GREEN_1);     //port assignment
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	85 e2       	ldi	r24, 0x25	; 37
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 5e 00 	call	0xbc	; 0xbc <GPIO_write_low>
	
	GPIO_config_output(&DDRB, LED_GREEN_3);
 116:	63 e0       	ldi	r22, 0x03	; 3
 118:	84 e2       	ldi	r24, 0x24	; 36
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
	GPIO_write_low(&PORTB, LED_GREEN_3);
 120:	63 e0       	ldi	r22, 0x03	; 3
 122:	85 e2       	ldi	r24, 0x25	; 37
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 5e 00 	call	0xbc	; 0xbc <GPIO_write_low>
	
	GPIO_config_output(&DDRB, LED_GREEN_5);
 12a:	65 e0       	ldi	r22, 0x05	; 5
 12c:	84 e2       	ldi	r24, 0x24	; 36
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
	GPIO_write_low(&PORTB, LED_GREEN_5);
 134:	65 e0       	ldi	r22, 0x05	; 5
 136:	85 e2       	ldi	r24, 0x25	; 37
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 5e 00 	call	0xbc	; 0xbc <GPIO_write_low>



    /* RED LED */
	GPIO_config_output(&DDRB, LED_RED_2);
 13e:	62 e0       	ldi	r22, 0x02	; 2
 140:	84 e2       	ldi	r24, 0x24	; 36
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
	GPIO_write_low(&PORTB, LED_RED_2);
 148:	62 e0       	ldi	r22, 0x02	; 2
 14a:	85 e2       	ldi	r24, 0x25	; 37
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 5e 00 	call	0xbc	; 0xbc <GPIO_write_low>
	
	GPIO_config_output(&DDRB, LED_RED_4);
 152:	64 e0       	ldi	r22, 0x04	; 4
 154:	84 e2       	ldi	r24, 0x24	; 36
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
	GPIO_write_low(&PORTB, LED_RED_4);
 15c:	64 e0       	ldi	r22, 0x04	; 4
 15e:	85 e2       	ldi	r24, 0x25	; 37
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 5e 00 	call	0xbc	; 0xbc <GPIO_write_low>


    /* push button */
    GPIO_config_input_pullup(&DDRD, BTN);
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	8a e2       	ldi	r24, 0x2A	; 42
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_config_input_pullup>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	80 e7       	ldi	r24, 0x70	; 112
 174:	92 e0       	ldi	r25, 0x02	; 2
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x74>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x7e>
 180:	00 00       	nop
 while (1)
 {
	 // Pause several milliseconds
	 _delay_ms(BLINK_DELAY);
	 
	 if (!GPIO_read(&PIND, BTN))
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	89 e2       	ldi	r24, 0x29	; 41
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 77 00 	call	0xee	; 0xee <GPIO_read>
 18c:	81 11       	cpse	r24, r1
 18e:	f0 cf       	rjmp	.-32     	; 0x170 <main+0x6e>
	 {
		 
		 //forward toggle
		 GPIO_toggle(&PORTB, LED_GREEN_1);
 190:	61 e0       	ldi	r22, 0x01	; 1
 192:	85 e2       	ldi	r24, 0x25	; 37
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 19a:	2f ef       	ldi	r18, 0xFF	; 255
 19c:	80 e7       	ldi	r24, 0x70	; 112
 19e:	92 e0       	ldi	r25, 0x02	; 2
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0x9e>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0xa8>
 1aa:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_GREEN_1);
 1ac:	61 e0       	ldi	r22, 0x01	; 1
 1ae:	85 e2       	ldi	r24, 0x25	; 37
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_RED_2);
 1b6:	62 e0       	ldi	r22, 0x02	; 2
 1b8:	85 e2       	ldi	r24, 0x25	; 37
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 1c0:	2f ef       	ldi	r18, 0xFF	; 255
 1c2:	80 e7       	ldi	r24, 0x70	; 112
 1c4:	92 e0       	ldi	r25, 0x02	; 2
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0xc4>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0xce>
 1d0:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_RED_2);
 1d2:	62 e0       	ldi	r22, 0x02	; 2
 1d4:	85 e2       	ldi	r24, 0x25	; 37
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_GREEN_3);
 1dc:	63 e0       	ldi	r22, 0x03	; 3
 1de:	85 e2       	ldi	r24, 0x25	; 37
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 1e6:	2f ef       	ldi	r18, 0xFF	; 255
 1e8:	80 e7       	ldi	r24, 0x70	; 112
 1ea:	92 e0       	ldi	r25, 0x02	; 2
 1ec:	21 50       	subi	r18, 0x01	; 1
 1ee:	80 40       	sbci	r24, 0x00	; 0
 1f0:	90 40       	sbci	r25, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <main+0xea>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0xf4>
 1f6:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_GREEN_3);
 1f8:	63 e0       	ldi	r22, 0x03	; 3
 1fa:	85 e2       	ldi	r24, 0x25	; 37
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_RED_4);
 202:	64 e0       	ldi	r22, 0x04	; 4
 204:	85 e2       	ldi	r24, 0x25	; 37
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	80 e7       	ldi	r24, 0x70	; 112
 210:	92 e0       	ldi	r25, 0x02	; 2
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x110>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x11a>
 21c:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_RED_4);
 21e:	64 e0       	ldi	r22, 0x04	; 4
 220:	85 e2       	ldi	r24, 0x25	; 37
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_GREEN_5);
 228:	65 e0       	ldi	r22, 0x05	; 5
 22a:	85 e2       	ldi	r24, 0x25	; 37
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 232:	2f ef       	ldi	r18, 0xFF	; 255
 234:	80 e7       	ldi	r24, 0x70	; 112
 236:	92 e0       	ldi	r25, 0x02	; 2
 238:	21 50       	subi	r18, 0x01	; 1
 23a:	80 40       	sbci	r24, 0x00	; 0
 23c:	90 40       	sbci	r25, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x136>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x140>
 242:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 
		 //backward toggle
		 GPIO_toggle(&PORTB, LED_GREEN_5);
 244:	65 e0       	ldi	r22, 0x05	; 5
 246:	85 e2       	ldi	r24, 0x25	; 37
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_RED_4);
 24e:	64 e0       	ldi	r22, 0x04	; 4
 250:	85 e2       	ldi	r24, 0x25	; 37
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	80 e7       	ldi	r24, 0x70	; 112
 25c:	92 e0       	ldi	r25, 0x02	; 2
 25e:	21 50       	subi	r18, 0x01	; 1
 260:	80 40       	sbci	r24, 0x00	; 0
 262:	90 40       	sbci	r25, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <main+0x15c>
 266:	00 c0       	rjmp	.+0      	; 0x268 <main+0x166>
 268:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_RED_4);
 26a:	64 e0       	ldi	r22, 0x04	; 4
 26c:	85 e2       	ldi	r24, 0x25	; 37
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_GREEN_3);
 274:	63 e0       	ldi	r22, 0x03	; 3
 276:	85 e2       	ldi	r24, 0x25	; 37
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 27e:	2f ef       	ldi	r18, 0xFF	; 255
 280:	80 e7       	ldi	r24, 0x70	; 112
 282:	92 e0       	ldi	r25, 0x02	; 2
 284:	21 50       	subi	r18, 0x01	; 1
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	90 40       	sbci	r25, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x182>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x18c>
 28e:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_GREEN_3);
 290:	63 e0       	ldi	r22, 0x03	; 3
 292:	85 e2       	ldi	r24, 0x25	; 37
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_RED_2);
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	85 e2       	ldi	r24, 0x25	; 37
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 2a4:	2f ef       	ldi	r18, 0xFF	; 255
 2a6:	80 e7       	ldi	r24, 0x70	; 112
 2a8:	92 e0       	ldi	r25, 0x02	; 2
 2aa:	21 50       	subi	r18, 0x01	; 1
 2ac:	80 40       	sbci	r24, 0x00	; 0
 2ae:	90 40       	sbci	r25, 0x00	; 0
 2b0:	e1 f7       	brne	.-8      	; 0x2aa <main+0x1a8>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <main+0x1b2>
 2b4:	00 00       	nop
		 _delay_ms(BLINK_DELAY);
		 GPIO_toggle(&PORTB, LED_RED_2);
 2b6:	62 e0       	ldi	r22, 0x02	; 2
 2b8:	85 e2       	ldi	r24, 0x25	; 37
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
		 GPIO_toggle(&PORTB, LED_GREEN_1);
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	85 e2       	ldi	r24, 0x25	; 37
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 6b 00 	call	0xd6	; 0xd6 <GPIO_toggle>
 2ca:	52 cf       	rjmp	.-348    	; 0x170 <main+0x6e>

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
